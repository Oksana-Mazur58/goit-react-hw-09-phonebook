{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/store.js","components/Container/Container.js","components/Navigation/Navigations.js","components/AuthNav/AuthNav.js","components/UserMenu/defaultAvatar.jpg","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js","redux/auth/authActions.js","redux/auth/authReducer.js","redux/auth/authOperations.js","redux/auth/authSelectors.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsActions","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","contactsFormReducer","createReducer","_","payload","state","filter","id","filterReducer","loadingReducer","contactsReducer","combineReducers","contacts","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","Container","children","className","Navigation","isAuthenticated","useSelector","authSelectors","getIsAuthenticated","to","exact","activeClassName","AuthNav","UserMenu","useDispatch","getUsername","src","defaultAvatar","alt","width","type","onClick","authOperations","logOut","AppBar","PublicRoute","redirectTo","routeProps","isLoggedIn","restricted","PrivateRoute","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","headers","common","Authorization","register","credentials","message","logIn","console","log","getState","persistedToken"],"mappings":"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","file":"static/js/main.91c1402d.chunk.js","sourcesContent":["\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\nconst fetchContactsError = createAction('phonebook/fetchContactsError');\n\nconst addContactRequest = createAction('phonebook/addContactRequest');\nconst addContactSuccess = createAction('phonebook/addContactSuccess');\nconst addContactError = createAction('phonebook/addContactError');\n\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\nconst deleteContactError = createAction('phonebook/deleteContactError');\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport default { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter };","import axios from 'axios';\nimport { contactsActions } from './'\n\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } = contactsActions;\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest());\n\n    axios.get('/contacts').then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    axios.post('/contacts', contact).then(({ data }) =>\n        dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios.delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact }","import { createReducer, combineReducers } from '@reduxjs/toolkit'\nimport { contactsActions } from './';\n\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } = contactsActions;\n\nconst contactsFormReducer = createReducer([], {\n    [fetchContactsSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload\n});\n\nconst loadingReducer = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false\n});\n\nconst contactsReducer = combineReducers({\n    contacts: contactsFormReducer,\n    filter: filterReducer,\n    loading: loadingReducer\n});\n\nexport default contactsReducer;","import { configureStore, getDefaultMiddleware, } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    })\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport './Navigation.scss'\n\nexport default function Navigation() {\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n    return (<nav>\n        <NavLink to=\"/\"\n            exact\n            className='nav-link'\n            activeClassName='nav-link__active'>\n            Main\n        </NavLink>\n\n\n        {isAuthenticated && (<NavLink\n            to=\"/contacts\"\n            exact\n            className='nav-link'\n            activeClassName='nav-link__active'>\n            Contacts\n        </NavLink>)}\n    </nav>)\n}\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../Navigation/Navigation.scss'\n\nconst AuthNav = () => (\n    <div>\n        <NavLink\n            to=\"/register\"\n            exact\n            className='nav-link'\n            activeClassName='nav-link__active'\n        >\n            Registration\n        </NavLink>\n        <NavLink\n            to=\"/login\"\n            exact\n            className='nav-link'\n            activeClassName='nav-link__active'\n        >\n            Log In\n        </NavLink>\n    </div>\n);\n\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/defaultAvatar.12e39dc7.jpg\";","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './defaultAvatar.jpg';\nimport './UserMenu.scss'\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelectors.getUsername);\n\n    const onLogout = () => dispatch(authOperations.logOut());\n\n    return (\n        <div className='user-container'>\n            <img src={defaultAvatar} alt=\"\" width=\"32\" className='user-avatar' />\n            <span className='user-name'>Welcome, {name}</span>\n            <button type=\"button\" onClick={onLogout} className='user-btn'>\n                Logout\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './AppBar.scss'\nimport Navigation from '../Navigation'\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { authSelectors } from '../../redux/auth'\n\nexport default function AppBar() {\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n    return (<header className='app-header'>\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>)\n\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n    isAuthenticated,\n    redirectTo,\n    children,\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn && routeProps.restricted ? (\n                <Redirect to={redirectTo} />\n            ) : (\n                children\n            )}\n        </Route>\n    );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n    isAuthenticated,\n    redirectTo,\n    children,\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n}","import React, { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Container from './components/Container'\nimport AppBar from './components/AppBar'\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport { authOperations } from './redux/auth'\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser())\n  }, [dispatch])\n\n  return (<Container>\n    <AppBar />\n    <Suspense fallback={<h3>Loading...</h3>}>\n      <Switch>\n        <PublicRoute exact path=\"/\" >\n          <HomeView />\n        </PublicRoute>\n        <PublicRoute\n          path=\"/register\"\n          restricted\n          redirectTo=\"/contacts\">\n          <RegisterView />\n        </PublicRoute>\n        <PublicRoute\n          path=\"/login\"\n          restricted\n          redirectTo=\"/contacts\">\n          <LoginView/>\n        </PublicRoute>\n        <PrivateRoute\n          path=\"/contacts\"\n          redirectTo=\"/login\">\n          <ContactsView/>\n        </PrivateRoute>\n      </Switch>\n    </Suspense>\n  </Container >)\n};\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './authActions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error,\n});","import axios from 'axios';\nimport authActions from './authActions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = credentials => dispatch => {\n    dispatch(authActions.registerRequest());\n\n    axios.post('/users/signup', credentials).then(({ data }) => {\n        token.set(data.token)\n        dispatch(authActions.registerSuccess(data))\n    }).catch(({ message }) =>\n        dispatch(authActions.registerError(message)));\n};\n\nconst logIn = credentials => dispatch => {\n    dispatch(authActions.loginRequest());\n\n    axios.post('/users/login', credentials).then(({ data }) => {\n        console.log(data);\n        token.set(data.token)\n        dispatch(authActions.loginSuccess(data))\n    }).catch(({ message }) =>\n        dispatch(authActions.loginError(message)));\n};\n\nconst logOut = () => dispatch => {\n    dispatch(authActions.logoutRequest());\n\n    axios.post('/users/logout').then(() => {\n        token.unset()\n        dispatch(authActions.logoutSuccess())\n    }).catch(({ message }) =>\n        dispatch(authActions.logoutError(message)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(authActions.getCurrentUserRequest());\n\n    axios.get('/users/current').then(({ data }) => {\n        dispatch(authActions.getCurrentUserSuccess(data))\n    }).catch(({ message }) =>\n        dispatch(authActions.getCurrentUserError(message)));\n};\n\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n    getIsAuthenticated,\n    getUsername,\n};"],"sourceRoot":""}